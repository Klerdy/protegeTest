Einstellungen
=============
git config --global user.name "Norman"
git config --global user.email "Norman_Nusse@gmx.de"

Lokales Repo erstellen
======================
mkdir example
cd example

git init		=> erzeugt lokales Repo
git clone		=> kopiert Remote Repo

Dateien in Stage überführen/löschen und Status abfragen
=======================================================
git status 
git add -A 		=> alles in den Stage schreiben
git reset test.py	=> lösche test.py aus Stage
git reset 		=> löscht alles aus dem Stage

Modifizierung einer Datei rückgängig machen
=======================================================
git checkout dieDatei

Commit
======
git commit -m "Kommentar"
git log 		=> zeigt alle Commits an

Commit bearbeiten
================
git commit --amend -m "newMessage" => ändert das Kommentar des letzten Commits, für den Fall, dass dieses falsch war.
git commit --amend	=> falls im Commit was fehlt! Achtung Datei muss im Stage liegen !!!

Commit auf anderen Branch verschieben
=====================================
git checkout OTHERBRANCH
git cherry-pick BranchHASH

Commits löschen
= soft			=> setzt Commit auf angegebenen Hash zurück, speichert den Rest aber im Stage ab.
  git reset --soft ResetToHash
= mixed			=> setzt Commit auf angegebenen Hash zurück, speichert den Rest ins WorkingDirectory
  git reset ResetToHash
= hard			=> setzt Commit auf angegebenen Hash zurück und löscht die Änderungen, untracked Files sind aber noch da
  git reset --hard ResetToHash

bei einer unbeabsichtigten Löschung kann noch mit reflog der Vorgang rückgängig gemacht werden.
= git reflog
= git checkout HASHWERT

Löschen von untracked Files 
= git clean -df
 
Pushing Commits
===============
Make Commit
git diff
git status
git add -A
git commit -m "Modified multiply function"

Push
git pull origin master
git push origin master

Push to Remote with new Branch
git push -u origin newBranch

Befehle für Remote Repo
=======================
git remote -v		=> zeigt die Repos an (lokal und Remote falls vorhanden) 
git branch -a		=> zeigt existierende Branches (remote und lokal)
git branch		=> zeigt lokale Branches und welcher gerade aktiv ist
git checkout branch	=> wechselt den lokalen Branch

